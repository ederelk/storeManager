/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * creditSales.java
 *
 * Created on 5 août 2012, 11:41:00
 */
package storem.credit_sales;

import java.util.Calendar;
import javax.swing.JOptionPane;
import storem.databases.tableModelfunc;

/**
 *
 * @author Yaovi Elom Kwasi AKA REDE <ederelk@gmail.com>
 */
public class creditSales extends javax.swing.JPanel {
     public int payement = 2;
      String pay = "";
      private  final String PASSWORD = "ederelsa" ;
      public static String[] columns = {"Code de Transaction","Nom du Client","Nom du Produit","Quantité Vendue",
          "Prix Unitaire","Prix Total","Date","Remboursement"};
     
      static String  query = " SELECT id,customer_name,product_name,quantity_sold,unit_price,"
              + "total_price,DATE_FORMAT(date,'          %d/%m/%Y    %H:%i:%s'),reimbursement_status FROM sales WHERE credit_sales='CREDIT' ORDER BY date DESC";
    
      public final static  Class[] columnsType = new Class[]{ java.lang.Long.class,java.lang.String.class,java.lang.String.class,
    java.lang.Long.class, java.lang.Long.class,java.lang.Long.class,java.util.Calendar.class,java.lang.String.class};  
     java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize(); 

    /** Creates new form creditSales */
    public creditSales() {
        initComponents();
        tableModelfunc.setDBconnection();
        tableModelfunc.setDateLanguage("fr_FR");
        tableModelfunc.setTableModelToJtable(creditSalesTable, columns, query, columnsType);
        tableModelfunc.loadCustomer(customerNameCombo);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmationDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        creditSalesTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) { return false; }};
        ;
        jPanel1 = new javax.swing.JPanel();
        customerNameCombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        confirmationDialog.setAlwaysOnTop(true);
        confirmationDialog.setResizable(false);
        confirmationDialog.setSize(350, 190);
        confirmationDialog.setLocation((screenSize.width-confirmationDialog.getWidth())/2, (screenSize.height-confirmationDialog.getHeight())/2);
        confirmationDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                confirmationDialogWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                confirmationDialogWindowClosed(evt);
            }
        });

        jLabel1.setText("Mot de Passe:");

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jButton4.setText("Confirmer");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Annuler");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout confirmationDialogLayout = new javax.swing.GroupLayout(confirmationDialog.getContentPane());
        confirmationDialog.getContentPane().setLayout(confirmationDialogLayout);
        confirmationDialogLayout.setHorizontalGroup(
            confirmationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmationDialogLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmationDialogLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(51, 51, 51))
        );
        confirmationDialogLayout.setVerticalGroup(
            confirmationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmationDialogLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(confirmationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(36, 36, 36)
                .addGroup(confirmationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        setBackground(new java.awt.Color(255, 255, 255));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        creditSalesTable.setAutoCreateRowSorter(true);
        creditSalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(creditSalesTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        customerNameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selectionner Nom Du Client" }));
        customerNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameComboActionPerformed(evt);
            }
        });

        jButton1.setText("Afficher tous les Credits");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Rembourser");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Annuler Remboursement");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(customerNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton3)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1003, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void customerNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameComboActionPerformed
       String viewSpecificCreditQuery = query;
        
       if(!"Selectionner Nom Du Client".equals(customerNameCombo.getSelectedItem().toString())) {
           viewSpecificCreditQuery =" SELECT id,customer_name,product_name,quantity_sold,unit_price,"
                + "total_price,DATE_FORMAT(date,'          %d/%m/%Y    %H:%i:%s'),reimbursement_status "
                + " FROM sales WHERE credit_sales='CREDIT' AND customer_name ='"+customerNameCombo.getSelectedItem().toString()+"'";}
       
        tableModelfunc.setTableModelToJtable(creditSalesTable, columns, viewSpecificCreditQuery, columnsType);
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tableModelfunc.setTableModelToJtable(creditSalesTable, columns, query, columnsType);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try{
        String checkPaidStatus = "select paid_status from sales WHERE id = "+creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumnId(creditSalesTable));
        
        String pay1 = tableModelfunc.getPaidStatus(checkPaidStatus);
        int payement1 =Integer.parseInt(pay1== null?"2":pay1);
        if(payement1 == 0){
            
        
        int decision = JOptionPane.showConfirmDialog(this, "Veuillez confirmer que "+creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(), tableModelfunc.getCorrectColumnClient(creditSalesTable))+" a rembourser pour " +creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumn(creditSalesTable)), "Confirmation", JOptionPane.YES_NO_OPTION,3 ) ;
        
        if (decision == JOptionPane.YES_OPTION){
            String updateReimbursement =  "UPDATE sales SET  reimbursement_status = CONCAT('EFFECTUE LE ',DATE_FORMAT(CURRENT_TIMESTAMP(),'%W %d, %M %Y  à  %H:%i:%s')), paid_status = 1 "
                    + "WHERE id = "+creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumnId(creditSalesTable));
            if(customerNameCombo.getSelectedIndex()!=0){
                tableModelfunc.executeQueryUpdate(updateReimbursement);
                customerNameComboActionPerformed(evt);
            }else{
                tableModelfunc.executeQueryUpdate(updateReimbursement);
               tableModelfunc.setTableModelToJtable(creditSalesTable, columns, query, columnsType); 
            }
                    
        }
        }
        if(payement1 == 1){
            JOptionPane.showMessageDialog(jButton1, "Ce credit à été déjà rembourser!", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
         }catch(IndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(null, "S'il vous plais , Veuillez SELECTIONNER une TRANSACTION avant de cliquer sur Rembourser", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        
        try{
        String checkPaidStatus = "select paid_status from sales WHERE id = "+creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumnId(creditSalesTable));
        jTextArea1.setText("Veuillez confirmer L'annulation du \n remboursement  de  "+
                creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(), tableModelfunc.getCorrectColumnClient(creditSalesTable))+
                " pour le produit \n" 
                +creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumn(creditSalesTable)));
        jPasswordField1.setText("");
        pay = tableModelfunc.getPaidStatus(checkPaidStatus);
        payement =Integer.parseInt(pay== null?"2":pay);
        if(payement == 1){
            confirmationDialog.setModal(true);
        confirmationDialog.setVisible(true);
       // confirmationDialog.setAlwaysOnTop(true);
       //jButton2.setEnabled(false);
       //jButton3.setEnabled(false);
       //jButton1.setEnabled(false);
       //customerNameCombo.setEnabled(false);
       //creditSalesTable.setEnabled(false);
        }
        if(payement== 0){
            JOptionPane.showMessageDialog(creditSalesTable, "Ce credit est déjà EN ATTENTE de remboursement!", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        
       
        }catch(IndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(null, "S'il vous plais , Veuillez SELECTIONNER une TRANSACTION avant de cliquer sur  Annuler Remboursement", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

          try{
        if(payement == 1 && jPasswordField1.getText().equals(PASSWORD)){
            
            String updateReimbursement =  "UPDATE sales SET  reimbursement_status = 'EN ATTENTE', paid_status = 0 "
                    + "WHERE id = "+creditSalesTable.getValueAt(creditSalesTable.getSelectedRow(),tableModelfunc.getCorrectColumnId(creditSalesTable));
            if(customerNameCombo.getSelectedIndex()!=0){
                tableModelfunc.executeQueryUpdate(updateReimbursement);
                customerNameComboActionPerformed(evt);
            }else{
                tableModelfunc.executeQueryUpdate(updateReimbursement);
               tableModelfunc.setTableModelToJtable(creditSalesTable, columns, query, columnsType); 
            }
                    
        
       // confirmationDialog.setVisible(false);
            
            confirmationDialog.dispose();
            confirmationDialog.setModal(false);
      // confirmationDialog.setAlwaysOnTop(false);
      // jButton2.setEnabled(true);
       //jButton3.setEnabled(true);
       //jButton1.setEnabled(true);
       //customerNameCombo.setEnabled(true);
       //creditSalesTable.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "Mot de passe incorrect", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
       
          }catch(IndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(null, "Assurer vous que une TRANSACTION a été selectionnée avant de cliquer sur  Annuler Remboursement", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

          confirmationDialog.dispose();
            confirmationDialog.setModal(false);
       //confirmationDialog.setVisible(false);
       //confirmationDialog.setAlwaysOnTop(false);
       //jButton2.setEnabled(true);
       //jButton3.setEnabled(true);
       //jButton1.setEnabled(true);
      // customerNameCombo.setEnabled(true);
      // creditSalesTable.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void confirmationDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_confirmationDialogWindowClosed
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmationDialogWindowClosed

    private void confirmationDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_confirmationDialogWindowClosing
        
       // confirmationDialog.setAlwaysOnTop(false);
       //jButton2.setEnabled(true);
       //jButton3.setEnabled(true);
       //jButton1.setEnabled(true);
       //customerNameCombo.setEnabled(true);
       //creditSalesTable.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmationDialogWindowClosing

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
       tableModelfunc.setTableModelToJtable(creditSalesTable, columns, query, columnsType);
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorAdded

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog confirmationDialog;
    private javax.swing.JTable creditSalesTable;
    private javax.swing.JComboBox customerNameCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
