/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * products.java
 *
 * Created on 20 avr. 2012, 09:21:23
 */
package storem.products;

import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import storem.databases.tableModelfunc;
import storem.exceptionControl.ExceptionControl;
/**
 *
 * @author Yaovi Elom Kwasi AKA REDE <ederelk@gmail.com>
 */
public class products extends javax.swing.JPanel {
 
  
    public static String[] columns1 = {"Nom du Produit","Prix de Vente Unitaire","Prix Total ou Carton(de Vente)"};
    public static String[] columns2 = {"Nom du Produit","Prix de Vente Unitaire","Prix d\'Achat Unitaire",
        "Prix Total ou Carton(de Vente)","Prix Total ou Carton(d\'Achat)"};
    static String  query1 = " SELECT product_name,sales_unit_price,sales_total_price FROM products";
    static String query2 = " SELECT product_name,sales_unit_price,purchased_unit_price,sales_total_price,purchased_total_price FROM products";
    public final static  Class[] columnsType1 = new Class[]{ java.lang.String.class,
    java.math.BigInteger.class, java.math.BigInteger.class,java.math.BigInteger.class};  
     public final static  Class[] columnsType2 = new Class[]{ java.lang.String.class,
    java.math.BigInteger.class, java.math.BigInteger.class,java.math.BigInteger.class, java.math.BigInteger.class,java.math.BigInteger.class};
    Icon   trashIcon =new ImageIcon(getClass().getResource("panel_trash_h.PNG"));
    ButtonGroup hey = new ButtonGroup();
    boolean showPurchasedPrice = false;
    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize(); 
  
        /** Creates new form products */
    public products() {
        initComponents();
     //  putClientProperty("productTable.autoStartsEdit", Boolean.FALSE);
       System.err.println(getClientProperty("productTable.autoStartsEdit"));
   
        tableModelfunc.setDBconnection();
        tableModelfunc.setDateLanguage("fr_FR");
        tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),
                whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
       
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProductDialog = new javax.swing.JDialog();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();
        purchasedTotalPrice = new javax.swing.JTextField();
        productName = new javax.swing.JTextField();
        salesTotalPrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        salesUnitPrice = new javax.swing.JTextField();
        purchasedUnitPrice = new javax.swing.JTextField();
        editProductDialog = new javax.swing.JDialog();
        cancel1 = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        purchasedUnitPrice1 = new javax.swing.JTextField();
        unitPrice1 = new javax.swing.JTextField();
        productName1 = new javax.swing.JTextField();
        purchasedTotalPrice1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        totalPrice1 = new javax.swing.JTextField();
        myPopupMenu = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column)
            { return false; }

        };
        jPanel1 = new javax.swing.JPanel();
        addProduct = new javax.swing.JButton();
        editProduct = new javax.swing.JButton();
        deleteProduct = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        yes = new javax.swing.JRadioButton();
        no = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();

        addProductDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addProductDialog.setTitle("Ajouter Nouveau Produit");
        addProductDialog.setResizable(false);
        addProductDialog.setSize(440, 355);
        addProductDialog.setLocation((screenSize.width-addProductDialog.getWidth())/2, (screenSize.height-addProductDialog.getHeight())/2);

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/ui/DiscardRed.png"))); // NOI18N
        cancel.setText("Annuler");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/ui/ApplyGreen.png"))); // NOI18N
        save.setText("Enregistrer");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        productName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameActionPerformed(evt);
            }
        });

        salesTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesTotalPriceActionPerformed(evt);
            }
        });

        jLabel2.setText("Nom du Produit:");

        jLabel3.setText("Prix Total ou Carton (D' Achat) :");

        jLabel4.setText("Prix Total ou Carton (De Vente) :");

        jLabel8.setText("Prix Unitaire D'Achat :");

        jLabel9.setText("Prix Unitaire De Vente :");

        purchasedUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasedUnitPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addProductDialogLayout = new javax.swing.GroupLayout(addProductDialog.getContentPane());
        addProductDialog.getContentPane().setLayout(addProductDialogLayout);
        addProductDialogLayout.setHorizontalGroup(
            addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductDialogLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addProductDialogLayout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addComponent(cancel))
                        .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProductDialogLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save)
                        .addGap(54, 54, 54))
                    .addGroup(addProductDialogLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productName, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(purchasedUnitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(salesUnitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(purchasedTotalPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(salesTotalPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67))))
        );
        addProductDialogLayout.setVerticalGroup(
            addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductDialogLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(purchasedUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(salesUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchasedTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(addProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(cancel))
                .addGap(27, 27, 27))
        );

        editProductDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editProductDialog.setTitle("Modifier Produit");
        editProductDialog.setResizable(false);
        editProductDialog.setSize(440, 355);
        editProductDialog.setLocation((screenSize.width-editProductDialog.getWidth())/2, (screenSize.height-editProductDialog.getHeight())/2);

        cancel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/ui/DiscardRed.png"))); // NOI18N
        cancel1.setText("Annuler");
        cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel1ActionPerformed(evt);
            }
        });

        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/ui/ApplyGreen.png"))); // NOI18N
        edit.setText("Modifier");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        productName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productName1ActionPerformed(evt);
            }
        });

        purchasedTotalPrice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasedTotalPrice1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Nom du Produit:");

        jLabel6.setText("Prix Unitaire De Vente :");

        jLabel7.setText("Prix Total ou Carton(de Vente):");

        jLabel11.setText("Prix Total ou Carton (D' Achat) :");

        jLabel12.setText("Prix Unitaire D'Achat :");

        totalPrice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPrice1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editProductDialogLayout = new javax.swing.GroupLayout(editProductDialog.getContentPane());
        editProductDialog.getContentPane().setLayout(editProductDialogLayout);
        editProductDialogLayout.setHorizontalGroup(
            editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editProductDialogLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(editProductDialogLayout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel5)))
                        .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7)))
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productName1)
                    .addComponent(unitPrice1)
                    .addComponent(purchasedUnitPrice1)
                    .addComponent(purchasedTotalPrice1)
                    .addComponent(totalPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editProductDialogLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(cancel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(edit)
                .addGap(25, 25, 25))
        );
        editProductDialogLayout.setVerticalGroup(
            editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editProductDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchasedUnitPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(21, 21, 21)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unitPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchasedTotalPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(27, 27, 27)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(totalPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(editProductDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel1))
                .addGap(50, 50, 50))
        );

        myPopupMenu.setBackground(new java.awt.Color(255, 255, 255));
        myPopupMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                myPopupMenuMouseEntered(evt);
            }
        });

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        //putClientProperty("productTable.autoStartsEdit", Boolean.FALSE);
        productTable.setAutoCreateRowSorter(true);
        productTable.setFont(new java.awt.Font("Tahoma", 0, 13));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        productTable.setFocusable(false);
        productTable.setRowHeight(20);
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        productTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productTableKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                productTableKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });

        addProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/icons/record_add.png"))); // NOI18N
        addProduct.setText("Ajouter Nouveau Produit");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        editProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/icons/record_edit.png"))); // NOI18N
        editProduct.setText("Modifier");
        editProduct.setToolTipText("Quand un Produit est déja  selectionné appuyez sur Entré pour le modifier");
        editProduct.setEnabled(false);
        editProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductActionPerformed(evt);
            }
        });

        deleteProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/icons/record_del.png"))); // NOI18N
        deleteProduct.setText("Supprimer");
        deleteProduct.setToolTipText("Quand un Produit est déja selectionné  appuyez sur Delete pour le supprimer");
        deleteProduct.setEnabled(false);
        deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductActionPerformed(evt);
            }
        });

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/icons/tiny_refresh.png"))); // NOI18N
        refresh.setText("Actualiser");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/storem/images/ui/search_icon.png"))); // NOI18N
        jLabel1.setText("Rechercher:");

        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
        });

        yes.setText("Oui");
        yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesActionPerformed(evt);
            }
        });

        no.setSelected(true);
        no.setText("Non");
        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });

        jLabel10.setText("Afichier Les Prix D'Achats ?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(no)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProduct)
                    .addComponent(editProduct)
                    .addComponent(refresh)
                    .addComponent(jLabel1)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteProduct)
                    .addComponent(jLabel10)
                    .addComponent(yes)
                    .addComponent(no)))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    public static String[] columnsHeader(boolean showPurchasedPrice){
        if(showPurchasedPrice == true)
            return columns2;
        else
           return columns1; 
    }
    public static String whichQuery(boolean showPurchasedPrice){
        if(showPurchasedPrice == true)
            return query2;
        else
           return query1; 
    }
    public static Class[] columnsHeaderType (boolean showPurchasedPrice){
        if(showPurchasedPrice == true)
            return columnsType2;
        else
           return columnsType1; 
    }
    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed

        resetTxtfields();
        addProductDialog.setModal(true);
        addProductDialog.setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_addProductActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),  
        whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));        // TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void editProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductActionPerformed
      try{
        tableModelfunc.loadSelectedProduct( productTable.getValueAt(productTable.getSelectedRow(), 
                tableModelfunc.getCorrectColumn(productTable)).toString() ,
                productName1,unitPrice1,totalPrice1,purchasedTotalPrice1,purchasedUnitPrice1);
     editProductDialog.setModal(true);
        editProductDialog.setVisible(true);}catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null, "S'il vous plais , Veuillez SELECTIONNER le produit à modifier", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_editProductActionPerformed

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
     
        if(!search.getText().equals(""))
        tableModelfunc.searchProducts(search, productTable, columnsHeader(showPurchasedPrice),showPurchasedPrice);
        else
            tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice), 
                    whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
        // TODO add your handling code here:
    }//GEN-LAST:event_searchCaretUpdate

    private void salesTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesTotalPriceActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
if(ExceptionControl.isEmptyTextField(productName)){ 
    JOptionPane.showMessageDialog(this,"Veuiller donner un nom au produit à enregistrer ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(purchasedUnitPrice)){
    JOptionPane.showMessageDialog(this,"Le prix unitaire d'achat doit etre en chiffre", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(salesUnitPrice)){
    JOptionPane.showMessageDialog(this,"Le prix unitaire de vente doit etre en chiffre ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(ExceptionControl.isEmptyTextField(salesUnitPrice)){ 
    JOptionPane.showMessageDialog(this,"Il est OBLIGATOIRE DE DONNER LE PRIX DE VENTE UNITAIRE du produit ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(purchasedTotalPrice)){
    JOptionPane.showMessageDialog(this,"Le prix total d'achat doit etre en chiffre ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(salesTotalPrice)){
    JOptionPane.showMessageDialog(this,"Le prix total de vente doit etre en chiffre", "Attention", JOptionPane.ERROR_MESSAGE);
}else{
        String insertInProducts ="INSERT INTO products VALUES ('"
                +productName.getText().replace("\'", "\\'").trim().toUpperCase() +"',"
                +(salesUnitPrice.getText().isEmpty()?"NULL":salesUnitPrice.getText().trim())+","
                +(purchasedUnitPrice.getText().isEmpty()?"NULL":purchasedUnitPrice.getText().trim()) +"," 
                +(salesTotalPrice.getText().isEmpty()?"NULL":salesTotalPrice.getText().trim()) +","
                +(purchasedTotalPrice.getText().isEmpty()?"NULL":purchasedTotalPrice.getText().trim())+")" ;
        String insertInStocks = "INSERT INTO stocks Value ('"+
                productName.getText().replace("\'", "\\'").trim().toUpperCase() +"',0,NULL,"
                + "CONCAT('<h4 style = \" color: black;\"> Date de Creation :</h4> ',DATE_FORMAT(CURRENT_TIMESTAMP(),'%W %d, %M %Y  à  %H:%i:%s'))) ";
        if(!tableModelfunc.executeQueryInsert(insertInProducts)){
            //addProductDialog.setModal(false);
            addProductDialog.setVisible(true);
        }else{
            
                tableModelfunc.executeQueryInsert(insertInStocks);
                 
            addProductDialog.dispose();
            addProductDialog.setModal(false);
        }
            
        
        tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),
                whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
        
        
        
}
        // TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    public void resetTxtfields(){
        productName.setText(null);
        purchasedTotalPrice.setText(null);
        salesTotalPrice.setText(null);
        salesUnitPrice.setText(null);
        
    }
    private void productNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed

        
        addProductDialog.dispose();
        addProductDialog.setModal(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductActionPerformed

        try{
      
        int  decision =JOptionPane.showConfirmDialog(this,"Etes vous sur de vouloir"
                + " supprimer "+productTable.getValueAt(productTable.getSelectedRow(), tableModelfunc.getCorrectColumn(productTable))+""
                + " ("+productTable.getValueAt(productTable.getSelectedRow(), tableModelfunc.getCorrectColumn(productTable)).toString().toUpperCase() +") de la "
                + "liste des produits ? ", "Supprimer Produit", JOptionPane.YES_NO_OPTION,2,trashIcon)  ;  
        
        String deleteProductQuery = "DELETE FROM products WHERE product_name = '" +
                 productTable.getValueAt(productTable.getSelectedRow(), tableModelfunc.getCorrectColumn(productTable))+"'";
        String deleteStockQuery = "DELETE FROM stocks WHERE product_name = '" +
                 productTable.getValueAt(productTable.getSelectedRow(), tableModelfunc.getCorrectColumn(productTable))+"'";
        if(decision == JOptionPane.YES_OPTION){
            tableModelfunc.executeQueryUpdate(deleteProductQuery);
            tableModelfunc.executeQueryUpdate(deleteStockQuery);
            tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),
                    whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
        }else{
            
        }}catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null, "S'il vous plais , Veuillez SELECTIONNER le produit à supprimer", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteProductActionPerformed

    private void cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel1ActionPerformed

        editProductDialog.dispose();
        editProductDialog.setModal(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel1ActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
if(ExceptionControl.isEmptyTextField(productName1)){ 
    JOptionPane.showMessageDialog(this,"Veuiller donner un nom au produit à enregistrer ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(purchasedUnitPrice1)){
    JOptionPane.showMessageDialog(this,"Le prix unitaire d'achat doit etre en chiffre", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(unitPrice1)){
    JOptionPane.showMessageDialog(this,"Le prix unitaire de vente doit etre en chiffre ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(ExceptionControl.isEmptyTextField(unitPrice1)){ 
    JOptionPane.showMessageDialog(this,"Il est OBLIGATOIRE DE DONNER LE PRIX DE VENTE UNITAIRE du produit ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(purchasedTotalPrice1)){
    JOptionPane.showMessageDialog(this,"Le prix total d'achat doit etre en chiffre ", "Attention", JOptionPane.ERROR_MESSAGE);
}else if(!ExceptionControl.isIntegerTextField(totalPrice1)){
    JOptionPane.showMessageDialog(this,"Le prix total de vente doit etre en chiffre", "Attention", JOptionPane.ERROR_MESSAGE);
}else{
        String editProductSql ="UPDATE products SET "+
                " product_name = '"+ productName1.getText().replace("\'", "\\'").trim().toUpperCase()+"', "
                +"sales_unit_price = "+(unitPrice1.getText().isEmpty()?"NULL":unitPrice1.getText().trim()) +","
                +"purchased_unit_price = "+(purchasedUnitPrice1.getText().isEmpty()?"NULL":purchasedUnitPrice1.getText().trim()) +","
                +"sales_total_price = "+(totalPrice1.getText().isEmpty()?"NULL":totalPrice1.getText().trim())+ ","
                +"purchased_total_price = "+(purchasedTotalPrice1.getText().isEmpty()?"NULL":purchasedTotalPrice1.getText().trim())+" WHERE product_name ='"
                +productTable.getValueAt(productTable.getSelectedRow(), 0)+"'";
        
        String editStockSql ="UPDATE stocks SET "+
                " product_name = '"+ productName1.getText().replace("\'", "\\'").trim().toUpperCase()+"'  WHERE product_name ='"
                +productTable.getValueAt(productTable.getSelectedRow(), 0)+"'";
        
             tableModelfunc.executeEditquery(editProductSql);
             tableModelfunc.executeEditquery(editStockSql);
             
                editProductDialog.dispose();
                editProductDialog.setModal(false);
                tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
                
}
// TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    private void productName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productName1ActionPerformed

    private void purchasedTotalPrice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasedTotalPrice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasedTotalPrice1ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void myPopupMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myPopupMenuMouseEntered
   
        //myPopupMenu.getComponent().setBackground(Color.red);     // TODO add your handling code here:
    }//GEN-LAST:event_myPopupMenuMouseEntered

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained

        // TODO add your handling code here:
       
    }//GEN-LAST:event_searchFocusGained

    private void yesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesActionPerformed

        if(yes.isSelected())
        no.setSelected(false);
        showPurchasedPrice = true;
        tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),
                whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
        // TODO add your handling code here:
    }//GEN-LAST:event_yesActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
       
        if(no.isSelected())
        yes.setSelected(false);
        showPurchasedPrice = false;
        tableModelfunc.setTableModelToJtable(productTable, columnsHeader(showPurchasedPrice),
                whichQuery(showPurchasedPrice), columnsHeaderType(showPurchasedPrice));
        // TODO add your handling code here:
    }//GEN-LAST:event_noActionPerformed

    private void totalPrice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPrice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPrice1ActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked

        productTable.removeKeyListener(null);
        if(evt.getClickCount()==2){
         //editProductDialog.setVisible(true);
         productTable.setSurrendersFocusOnKeystroke(false);
         productTable.removeEditor();
        }
        deleteProduct.setEnabled(true);
        editProduct.setEnabled(true);// TODO add your handling code here:
}//GEN-LAST:event_productTableMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1FocusGained

    private void productTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTableKeyReleased

       
        // TODO add your handling code here:
    }//GEN-LAST:event_productTableKeyReleased

    private void productTableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTableKeyTyped

           if(evt.getKeyChar() == (char) KeyEvent.VK_A ){
            editProduct.doClick();
            System.out.print("kjs");
        }
        if(evt.getKeyCode()== KeyEvent.VK_S){
            deleteProduct.doClick();
             System.out.print("kojos");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_productTableKeyTyped

    private void purchasedUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasedUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasedUnitPriceActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JDialog addProductDialog;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancel1;
    private javax.swing.JButton deleteProduct;
    private javax.swing.JButton edit;
    private javax.swing.JButton editProduct;
    private javax.swing.JDialog editProductDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu myPopupMenu;
    private javax.swing.JRadioButton no;
    private javax.swing.JTextField productName;
    private javax.swing.JTextField productName1;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField purchasedTotalPrice;
    private javax.swing.JTextField purchasedTotalPrice1;
    private javax.swing.JTextField purchasedUnitPrice;
    private javax.swing.JTextField purchasedUnitPrice1;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField salesTotalPrice;
    private javax.swing.JTextField salesUnitPrice;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JTextField totalPrice1;
    private javax.swing.JTextField unitPrice1;
    private javax.swing.JRadioButton yes;
    // End of variables declaration//GEN-END:variables
}
